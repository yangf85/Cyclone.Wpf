<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Themes/BasicTheme.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Styles/Control.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Toggle Button Style for SideMenu  -->
    <Style x:Key="SideMenu.ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="RootBorder"
                        Padding="1"
                        Background="Transparent"
                        BorderThickness="0">
                        <Path
                            x:Name="Arrow"
                            Width="16"
                            Height="16"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M908.70574649 831.22148693H134.16925867v-52.07344924h774.54813867v52.07344924zM531.80092872 442.96292125H130.86041885V390.889472h400.94050987zM531.80092872 634.17075485H130.86041885v-52.05597298h400.94050987zM901.4996992 245.91801458H126.9690368v-52.06762383h774.54231325v52.06762383zM669.95081672 518.02348658l225.4205383-150.2609408v300.53353244z"
                            Fill="{DynamicResource Icon.Foreground.Default}"
                            SnapsToDevicePixels="True"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Data" Value="M908.70574649 831.22148693H134.16925867v-52.07344924h774.54813867v52.07344924zM531.80092872 442.96292125H130.86041885V390.889472h400.94050987zM531.80092872 634.17075485H130.86041885v-52.05597298h400.94050987zM901.4996992 245.91801458H126.9690368v-52.06762383h774.54231325v52.06762383zM669.95081672 668.29607822V367.76254578l225.4205383 150.2609408z" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource Background.TransparentLight}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Foreground.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource Background.Pressed}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Foreground.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideMenuItem.Style.Basic" TargetType="ctl:SideMenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:SideMenuItem}">
                    <Border x:Name="RootBorder">
                        <StackPanel>
                            <Grid
                                x:Name="HeaderRoot"
                                Height="{TemplateBinding RowHeight}"
                                HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="IconColumn" Width="Auto" />
                                    <ColumnDefinition x:Name="HeaderColumn" Width="*" />
                                    <ColumnDefinition x:Name="ArrowColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    x:Name="IconContainer"
                                    Grid.Column="0"
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}" />
                                <ContentPresenter
                                    x:Name="HeaderContainer"
                                    Grid.Column="1"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    Visibility="{Binding Path=IsCompact, Converter={x:Static conv:VisibilityConverter.VisibleWhenFalse}, RelativeSource={RelativeSource AncestorType=ctl:SideMenu}}" />
                                <Path
                                    x:Name="Arrow"
                                    Grid.Column="2"
                                    Width="12"
                                    Height="12"
                                    Margin="0,0,5,0"
                                    VerticalAlignment="Center"
                                    Data="M512 606.29333299L790.698667 341.333333 853.333333 400.853333 512 725.333333l-341.333333-324.48L233.301333 341.333333z"
                                    Fill="{DynamicResource Icon.Foreground.Default}"
                                    Stretch="Uniform"
                                    StrokeThickness="0"
                                    Visibility="{Binding Path=IsCompact, Converter={x:Static conv:VisibilityConverter.VisibleWhenFalse}, RelativeSource={RelativeSource AncestorType=ctl:SideMenu}}" />
                            </Grid>
                            <ItemsPresenter x:Name="ItemsContainer" Visibility="Collapsed" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsActived" Value="True">
                            <Setter TargetName="HeaderRoot" Property="Background" Value="{DynamicResource Background.Active}" />
                            <Setter TargetName="HeaderRoot" Property="TextElement.Foreground" Value="{DynamicResource Foreground.Invert}" />
                        </Trigger>
                        <Trigger SourceName="HeaderRoot" Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderRoot" Property="Background" Value="{DynamicResource Background.Hover}" />
                            <Setter TargetName="HeaderRoot" Property="TextElement.Foreground" Value="{DynamicResource Foreground.Hover}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Foreground.Hover}" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Arrow" Property="Data" Value="M512 417.706667L233.301333 682.666667 170.666667 623.146667 512 298.666667l341.333333 324.48L790.698667 682.666667z" />
                        </Trigger>

                        <!--<DataTrigger Binding="{Binding Path=IsCompact, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:SideMenu}}" Value="True">
                        -->
                        <!--<Setter TargetName="IconColumn" Property="Width" Value="{Binding Path=CollapseWidth, RelativeSource={RelativeSource AncestorType=ctl:SideMenu}}" />-->
                        <!--
                            <Setter TargetName="HeaderColumn" Property="Width" Value="0" />
                            <Setter TargetName="ArrowColumn" Property="Width" Value="0" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SideMenuItem.Style.Basic}" TargetType="ctl:SideMenuItem" />

    <Style x:Key="SideMenu.Style.Basic" BasedOn="{StaticResource Control.Style.Basic}" TargetType="ctl:SideMenu">
        <Setter Property="Background" Value="{DynamicResource Background.Global}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SideMenuItem.Style.Basic}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctl:SideMenu">
                    <Border
                        x:Name="RootBorder"
                        Width="{TemplateBinding ExpansionWidth}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <DockPanel x:Name="HeaderContainer" Grid.Row="0">
                                <ContentPresenter Grid.Column="0" Content="{TemplateBinding Header}" />
                                <ToggleButton
                                    x:Name="ToggleCompactButton"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    IsChecked="{Binding IsCompact, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    Style="{StaticResource SideMenu.ToggleButtonStyle}"
                                    Visibility="{Binding Path=IsShowOpenButton, Converter={x:Static conv:VisibilityConverter.VisibleWhenTrue}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </DockPanel>

                            <ItemsPresenter Grid.Row="1" />
                            <ContentPresenter Grid.Row="2" Content="{TemplateBinding Footer}" />
                        </Grid>
                    </Border>

                    <!--  Animation Triggers  -->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsCompact, RelativeSource={RelativeSource AncestorType=ctl:SideMenu}}" Value="True">
                            <Setter TargetName="RootBorder" Property="Width" Value="{Binding Path=CollapseWidth, RelativeSource={RelativeSource AncestorType=ctl:SideMenu}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SideMenu.Style.Basic}" TargetType="ctl:SideMenu" />
</ResourceDictionary>