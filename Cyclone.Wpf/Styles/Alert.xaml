<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls"
	xmlns:hp="clr-namespace:Cyclone.Wpf.Helpers">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Themes/BasicTheme.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!--  警告窗口中按钮的样式  -->
	<Style x:Key="AlertWindow.CaptionCloseButtonStyle" TargetType="Button">
		<Setter Property="Background" Value="{Binding Path=CaptionBackground, RelativeSource={RelativeSource AncestorType=ctl:AlertWindow}}" />
		<Setter Property="Height" Value="{Binding Path=CaptionHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:AlertWindow}}" />
		<Setter Property="Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=Self}}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="RootGrid" Property="IsMouseOver" Value="True">
							<Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource Background.Close}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="RootGrid" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AlertWindow.AlertButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource Background.Default}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
		<Setter Property="Foreground" Value="{DynamicResource Foreground.Default}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="{DynamicResource Height.Horizontal.Control}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border
						x:Name="RootBorder"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="ContentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource Background.Hover}" />
							<Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource Border.Hover}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource Background.Pressed}" />
							<Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource Border.Pressed}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="RootBorder" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ctl:AlertWindow}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="ShowInTaskbar" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome
					GlassFrameThickness="-1"
					NonClientFrameEdges="None"
					ResizeBorderThickness="0"
					UseAeroCaptionButtons="False" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctl:AlertWindow}">
					<Border
						x:Name="RootBorder"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<DockPanel
								Grid.Row="0"
								Height="{TemplateBinding CaptionHeight}"
								Background="{TemplateBinding CaptionBackground}">
								<ContentPresenter
									x:Name="IconPresenter"
									Margin="5,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									Content="{TemplateBinding Icon}" />
								<Label
									x:Name="TitleLabel"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									Content="{TemplateBinding Title}"
									FontWeight="Bold"
									Foreground="{TemplateBinding TitleForeground}" />
								<Button
									x:Name="PART_CloseButton"
									HorizontalAlignment="Right"
									Command="{x:Static ctl:AlertWindow.CloseCommand}"
									Style="{StaticResource AlertWindow.CaptionCloseButtonStyle}"
									WindowChrome.IsHitTestVisibleInChrome="True">
									<Path
										Width="16"
										Height="16"
										Margin="1"
										Data="M 0,0 L 8,8 M 8,0 L 0,8"
										Stretch="Uniform"
										Stroke="{DynamicResource Icon.Foreground.Invert}"
										StrokeThickness="1" />
								</Button>
							</DockPanel>
							<Grid Grid.Row="1">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Content="{TemplateBinding Content}"
									TextElement.Foreground="{TemplateBinding ContentForeground}" />
							</Grid>
							<Grid Grid.Row="2">
								<Border
									Height="{TemplateBinding AlertButtonGroupHeight}"
									Padding="5"
									Background="{TemplateBinding AlertButtonGroupBackground}">
									<UniformGrid
										HorizontalAlignment="{TemplateBinding AlertButtonGroupHorizontalAlignment}"
										VerticalAlignment="Center"
										Rows="1">
										<Button
											x:Name="PART_YesButton"
											MinWidth="120"
											Command="{x:Static ctl:AlertWindow.CancelCommand}"
											Content="{TemplateBinding OkButtonText}"
											Style="{DynamicResource AlertWindow.AlertButtonStyle}" />
										<Button
											x:Name="PART_NoButton"
											Margin="5,0,0,0"
											Command="{x:Static ctl:AlertWindow.OkCommand}"
											Content="{TemplateBinding CancelButtonText}"
											Style="{DynamicResource AlertWindow.AlertButtonStyle}"
											Visibility="Collapsed" />
									</UniformGrid>
								</Border>
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ButtonType" Value="YesNo">
							<Setter TargetName="PART_NoButton" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>