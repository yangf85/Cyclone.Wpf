<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Themes/BasicTheme.xaml" />-->
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Styles/Control.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Expander.OpenButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        x:Name="RootGrid"
                        Margin="{TemplateBinding Padding}"
                        VerticalAlignment="Center"
                        Background="Transparent">
                        <Path
                            x:Name="Arrow"
                            Width="14"
                            Height="14"
                            HorizontalAlignment="Right"
                            Data="M533.333333 631.466667L866.133333 298.666667l29.866667 29.866666-362.666667 362.666667L170.666667 328.533333l29.866666-29.866666 332.8 332.8z"
                            Fill="{DynamicResource Icon.Foreground.Default}"
                            Stretch="Uniform" />
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Left"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}}" Value="Down" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="Data" Value="M533.333333 358.4l-332.8 332.8-29.866666-29.866667L533.333333 298.666667l362.666667 362.666666-29.866667 29.866667-332.8-332.8z" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}}" Value="Up">
                            <Setter TargetName="Arrow" Property="Data" Value="M533.333333 358.4l-332.8 332.8-29.866666-29.866667L533.333333 298.666667l362.666667 362.666666-29.866667 29.866667-332.8-332.8z" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}}" Value="Up" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="Data" Value="M533.333333 631.466667L866.133333 298.666667l29.866667 29.866666-362.666667 362.666667L170.666667 328.533333l29.866666-29.866666 332.8 332.8z" />
                        </MultiDataTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Icon.Foreground.Checked}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Icon.Foreground.Hover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Expander.Style.Basic" BasedOn="{StaticResource Control.Style.Basic}" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource Background.Container}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        x:Name="RootBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                x:Name="HeaderContainer"
                                Grid.Row="0"
                                Height="{DynamicResource Height.Horizontal.Control}"
                                Padding="3"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                Cursor="Hand"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource Expander.OpenButtonStyle}" />
                            <ContentPresenter
                                x:Name="ContentContainer"
                                Grid.Row="1"
                                Height="0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ContentContainer" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderContainer" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentContainer" Property="Height" Value="Auto" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ContentContainer" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderContainer" Property="Grid.Row" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource Expander.Style.Basic}" TargetType="Expander" />
</ResourceDictionary>