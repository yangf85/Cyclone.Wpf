<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
                    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Themes/BasicTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TimeSelectorItem.Style.Basic"
           TargetType="{x:Type ctl:TimeSelectorItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:TimeSelectorItem}">
                    <Border x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <TextBlock x:Name="DisplayText"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="{Binding Path=Value, StringFormat={}{0:D2}, RelativeSource={RelativeSource AncestorType=ctl:TimeSelectorItem}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Background.Hover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DisplayText" Property="Foreground" Value="DarkBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource TimeSelectorItem.Style.Basic}"
           TargetType="ctl:TimeSelectorItem" />

    <Style TargetType="{x:Type ctl:TimeSelector}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:TimeSelector}">
                    <Border x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                      CanContentScroll="True"
                                      HorizontalScrollBarVisibility="Disabled"
                                      PanningMode="VerticalOnly"
                                      VerticalScrollBarVisibility="Hidden">
                            <ctl:CyclicPanel x:Name="PART_CyclicPanel"
                                             IsItemsHost="True"
                                             VisibleItemCount="{TemplateBinding VisibleItemCount}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Height" Value="{Binding Path=MaxContainerHeight, RelativeSource={RelativeSource AncestorType=ctl:TimePicker}}" />
    </Style>

    <!--  TimePicker.OpenButton 样式  -->
    <Style x:Key="TimePicker.OpenButtonStyle"
           TargetType="ToggleButton">
        <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=ctl:TimePicker}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="RootGrid"
                          Background="{TemplateBinding Background}">
                        <Path x:Name="Indicator"
                              Width="16"
                              Height="16"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64z m-42.666667 170.666667a21.333333 21.333333 0 0 1 21.333334-21.333334h42.666666a21.333333 21.333333 0 0 1 21.333334 21.333334v284.650666l140.949333 140.949334a21.333333 21.333333 0 0 1 0 30.165333l-30.186667 30.165333a21.333333 21.333333 0 0 1-30.165333 0l-150.826667-150.826666a21.248 21.248 0 0 1-4.906666-7.573334A21.333333 21.333333 0 0 1 469.333333 544V234.666667z"
                              Fill="{DynamicResource Icon.Foreground.Default}"
                              Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Icon.Foreground.Hover}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Indicator" Property="Data" Value="M512.001012 1024c-282.773537 0-512.000512-229.227997-512.000512-511.999488 0-282.773537 229.226974-512.000512 512.000512-512.000512 282.771491 0 511.998465 229.226974 511.998465 512.000512C1023.999477 794.772003 794.771479 1024 512.001012 1024zM512.001012 64.999777C265.13529 64.999777 65.000277 265.135813 65.000277 512.000512c0 246.862652 200.135013 446.999711 446.999711 446.999711 246.863675 0 447.001758-200.137059 447.001758-446.999711C959.001746 265.135813 758.864687 64.999777 512.001012 64.999777zM482.000406 545.000257l-0.999713-351.000639 63.000351 0 0 319.000607 197.998471 166.000486-39.000071 54.999575L482.000406 545.000257z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TimePicker.TextBox 样式  -->
    <Style x:Key="TimePicker.TextBoxStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="RootBorder"
                            Background="Transparent"
                            BorderThickness="0">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Padding="2"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Background="Transparent" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TimePicker 样式  -->
    <Style TargetType="{x:Type ctl:TimePicker}">
        <Setter Property="Height" Value="{DynamicResource Height.Horizontal.Control}" />
        <Setter Property="Background" Value="{DynamicResource Background.Container}" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Default}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="TimeFormat" Value="HH:mm:ss" />
        <Setter Property="VisibleItemCount" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:TimePicker}">
                    <Border x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_DisplayText"
                                     Margin="{TemplateBinding Padding}"
                                     Style="{StaticResource TimePicker.TextBoxStyle}"
                                     Text="{TemplateBinding DisplayText}" />
                            <TextBlock x:Name="PART_Watermark"
                                       Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{DynamicResource Foreground.Placeholder}"
                                       Text="{TemplateBinding Watermark}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DisplayText, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <ToggleButton x:Name="PART_OpenButton"
                                          Grid.Column="1"
                                          Margin="0,0,3,0"
                                          IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          Style="{StaticResource TimePicker.OpenButtonStyle}" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PlacementTarget="{Binding ElementName=RootBorder}"
                                   PopupAnimation="Fade"
                                   StaysOpen="False"
                                   VerticalOffset="1">
                                <Border Width="{Binding ElementName=RootBorder, Path=ActualWidth}"
                                        MaxWidth="300"
                                        Padding="5"
                                        Background="{DynamicResource Background.Container}"
                                        BorderBrush="{DynamicResource Border.Default}"
                                        BorderThickness="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!--  标题行  -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{DynamicResource Text.Header}"
                                                       Text="时" />
                                            <TextBlock Grid.Column="1"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{DynamicResource Text.Header}"
                                                       Text="分" />
                                            <TextBlock Grid.Column="2"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{DynamicResource Text.Header}"
                                                       Text="秒" />
                                        </Grid>

                                        <Rectangle Grid.Row="1"
                                                   Height="1"
                                                   Margin="0,3"
                                                   VerticalAlignment="Bottom"
                                                   Fill="{DynamicResource Border.Default}" />

                                        <!--  选择器区域  -->
                                        <Grid Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <!--  各个时间选择器  -->
                                            <ctl:TimeSelector x:Name="PART_HourSelector"
                                                              Grid.Column="0" />
                                            <ctl:TimeSelector x:Name="PART_MinuteSelector"
                                                              Grid.Column="1"
                                                              Margin="5,0" />
                                            <ctl:TimeSelector x:Name="PART_SecondSelector"
                                                              Grid.Column="2" />

                                            <!--  中间遮罩区域  -->
                                            <Border x:Name="PART_CenterMask"
                                                    Grid.ColumnSpan="3"
                                                    Height="30"
                                                    VerticalAlignment="Center"
                                                    Background="{DynamicResource Background.Mask}"
                                                    BorderThickness="0"
                                                    IsHitTestVisible="False"
                                                    Opacity="0.15"
                                                    SnapsToDevicePixels="True" />
                                        </Grid>

                                        <!--  按钮区域  -->
                                        <UniformGrid Grid.Row="3"
                                                     Margin="0,5,0,0"
                                                     Rows="1">
                                            <Rectangle />
                                            <Rectangle />
                                            <Button x:Name="PART_CancelButton"
                                                    Grid.Column="1"
                                                    Background="{DynamicResource Background.Default}"
                                                    BorderBrush="{DynamicResource Border.Default}"
                                                    Content="取消"
                                                    Foreground="{DynamicResource Foreground.Default}" />
                                            <Button x:Name="PART_ConfirmButton"
                                                    Grid.Column="2"
                                                    Margin="5,0,0,0"
                                                    Background="{DynamicResource Background.Active}"
                                                    BorderBrush="{DynamicResource Border.Active}"
                                                    Content="确定"
                                                    Foreground="{DynamicResource Foreground.Active}" />
                                        </UniformGrid>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Border.Hover}" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Border.Editing}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>