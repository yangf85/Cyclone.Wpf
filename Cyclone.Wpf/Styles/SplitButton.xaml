<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Resources/CommonResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="SplitButton.DropDownToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="{DynamicResource Default.Background}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                        x:Name="Root"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <Path
                            x:Name="Indicator"
                            Width="14"
                            Height="14"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Data="M 0 0 L 6 6 L 12 0 Z"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Hover.Background}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Checked.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctl:SplitButtonItem}">
        <Setter Property="Height" Value="{DynamicResource Height.Horizontal.Item}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="{DynamicResource Global.Background}" />
        <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:SplitButton}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:SplitButton}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:SplitButtonItem}">
                    <Border
                        x:Name="Root"
                        Padding="{DynamicResource Padding.Horizontal}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true"
                        UseLayoutRounding="True">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Hover.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Pressed.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctl:SplitButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource Default.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource Default.Foreground}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="{DynamicResource Height.Horizontal.Control}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:SplitButton}">
                    <Border
                        x:Name="Root"
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="ContentGrid" Background="Transparent">
                                <ContentPresenter
                                    Margin="{DynamicResource Margin.Horizontal}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Label}" />
                            </Grid>
                            <Popup
                                MinWidth="{Binding ActualWidth, ElementName=Root}"
                                ctl:PopupBox.IsPositionUpdate="True"
                                AllowsTransparency="True"
                                IsOpen="{Binding IsChecked, ElementName=DropDownToggleButton}"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=Root}"
                                StaysOpen="False"
                                VerticalOffset="1">
                                <Border
                                    MinWidth="{Binding ElementName=Root, Path=ActualWidth}"
                                    Background="{DynamicResource Default.Background}"
                                    BorderBrush="{DynamicResource Default.Border}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True"
                                    UseLayoutRounding="True">
                                    <ScrollViewer
                                        Padding="{TemplateBinding Control.Padding}"
                                        Focusable="False"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <Rectangle
                                Grid.Column="1"
                                Width="1"
                                Fill="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:SplitButton}}"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True" />
                            <ToggleButton
                                x:Name="DropDownToggleButton"
                                Grid.Column="2"
                                Padding="5,0"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Style="{StaticResource SplitButton.DropDownToggleButtonStyle}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ContentGrid" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="ContentGrid" Property="Background" Value="{DynamicResource Hover.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>