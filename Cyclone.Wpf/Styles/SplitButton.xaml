<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
	<ResourceDictionary.MergedDictionaries>
		<!--<ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Themes/BasicTheme.xaml" />-->
		<ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Styles/Control.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="SplitButton.OpenButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="True" />
		<Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=ctl:SplitButton}}" />
		<Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid
						x:Name="RootBorder"
						Background="Transparent"
						SnapsToDevicePixels="True">
						<Path
							x:Name="Indicator"
							Width="15"
							Height="15"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Data="M533.333333 631.466667L866.133333 298.666667l29.866667 29.866666-362.666667 362.666667L170.666667 328.533333l29.866666-29.866666 332.8 332.8z"
							Fill="{TemplateBinding Foreground}"
							Stretch="Uniform" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Icon.Foreground.Hover}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Icon.Foreground.Checked}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ctl:SplitButtonItem}">
		<Setter Property="Height" Value="{DynamicResource Height.Horizontal.Item}" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Background" Value="{DynamicResource Background.Global}" />
		<Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:SplitButton}}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:SplitButton}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctl:SplitButtonItem}">
					<Border
						x:Name="Root"
						Padding="{DynamicResource Padding.Horizontal}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource Background.Hover}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource Background.Pressed}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="SplitButton.Style.Basic"
		BasedOn="{StaticResource Control.Style.Basic}"
		TargetType="{x:Type ctl:SplitButton}">
		<Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{DynamicResource Foreground.Default}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Height" Value="{DynamicResource Height.Horizontal.Control}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctl:SplitButton}">
					<Border
						x:Name="RootBorder"
						Background="Transparent"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid x:Name="ContentGrid" Background="Transparent">
								<ContentPresenter
									Margin="{DynamicResource Margin.Horizontal}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Content="{TemplateBinding Label}" />
							</Grid>
							<Rectangle
								Grid.Column="1"
								Width="1"
								Fill="{TemplateBinding BorderBrush}" />
							<ToggleButton
								x:Name="PART_OpenButton"
								Grid.Column="2"
								Margin="5,0"
								IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
								Style="{StaticResource SplitButton.OpenButtonStyle}" />
							<Popup
								x:Name="PART_Popup"
								ctl:PopupBox.IsPositionUpdate="True"
								AllowsTransparency="True"
								IsOpen="{TemplateBinding IsOpen}"
								Placement="Bottom"
								PlacementTarget="{Binding ElementName=RootBorder}"
								StaysOpen="False"
								VerticalOffset="1">
								<Border
									MinWidth="{Binding ElementName=RootBorder, Path=ActualWidth}"
									Background="{DynamicResource Background.Default}"
									BorderBrush="{DynamicResource Border.Default}"
									BorderThickness="1"
									SnapsToDevicePixels="True"
									UseLayoutRounding="True">
									<ScrollViewer
										Padding="{TemplateBinding Control.Padding}"
										Focusable="False"
										HorizontalScrollBarVisibility="Hidden"
										VerticalScrollBarVisibility="Auto">
										<ItemsPresenter />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="ContentGrid" Property="IsMouseOver" Value="True">
							<Setter TargetName="ContentGrid" Property="Background" Value="{DynamicResource Background.Hover}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource SplitButton.Style.Basic}" TargetType="ctl:SplitButton" />
</ResourceDictionary>