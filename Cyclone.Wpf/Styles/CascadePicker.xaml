<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Resources/CommonResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="ctl:CascadePickerItem">
        <Setter Property="Height" Value="{DynamicResource HorizontalControlHeight}" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctl:CascadePickerItem">
                    <Border
                        x:Name="RootBorder"
                        Padding="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"
                                Width="12"
                                Height="12"
                                Margin="5,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="M761.6 489.6l-432-435.2c-9.6-9.6-25.6-9.6-35.2 0-9.6 9.6-9.6 25.6 0 35.2l416 416-416 425.6c-9.6 9.6-9.6 25.6 0 35.2s25.6 9.6 35.2 0l432-441.6C771.2 515.2 771.2 499.2 761.6 489.6z"
                                Fill="{DynamicResource DefaultForegroundBrush}"
                                Stretch="Uniform" />
                            <Popup
                                x:Name="PART_ItemsPopup"
                                AllowsTransparency="True"
                                HorizontalOffset="3"
                                Placement="Right"
                                PlacementTarget="{Binding ElementName=RootBoder}"
                                VerticalOffset="-4">
                                <Border
                                    MinWidth="150"
                                    BorderBrush="{DynamicResource DefaultBorderBrush}"
                                    BorderThickness="1">
                                    <Grid
                                        x:Name="ItemPresenterBoder"
                                        Background="{DynamicResource DefaultBackgroundBrush}">
                                        <ItemsPresenter />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger SourceName="RootBorder" Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="HasItems" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ItemsPopup" Property="IsOpen" Value="True" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CascadePicker.OpenToggleButton"
        TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        x:Name="RootGrid"
                        Background="Transparent">
                        <Path
                            x:Name="Arrow"
                            Width="20"
                            Height="20"
                            Data="M20 20 L50 50 L80 20"
                            Stretch="Uniform"
                            Stroke="{DynamicResource DefaultBorderBrush}"
                            StrokeThickness="1.5" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Data" Value="M20 80 L50 50 L80 80" />
                        </Trigger>
                        <Trigger SourceName="RootGrid" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctl:CascadePicker">
        <Setter Property="Height" Value="{DynamicResource HorizontalControlHeight}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctl:CascadePicker">
                    <Border
                        x:Name="RootBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="WatermarkTextBlock"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Text="{TemplateBinding Watermark}"
                                Visibility="{Binding Path=DisplayedNodePath, Mode=TwoWay, Converter={x:Static conv:VisibilityConverter.VisibleWhenNullOrWhiteSpace}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <TextBox
                                x:Name="PART_DisplayedTextBox"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                BorderThickness="0"
                                IsReadOnly="True"
                                Text="{Binding Path=DisplayedNodePath, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=ctl:CascadePicker, Mode=FindAncestor}}" />
                            <ToggleButton
                                x:Name="PART_OpenToggleButton"
                                Grid.Column="1"
                                Margin="0,0,5,0"
                                IsChecked="{Binding Path=IsOpened, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Style="{StaticResource CascadePicker.OpenToggleButton}" />
                            <Popup
                                x:Name="PART_ItemsPopup"
                                AllowsTransparency="True"
                                Focusable="False"
                                HorizontalOffset="0"
                                IsOpen="{Binding ElementName=PART_OpenToggleButton, Path=IsChecked, Mode=TwoWay}"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=RootBorder}"
                                PopupAnimation="Slide"
                                VerticalOffset="0">
                                <Border
                                    MinWidth="150"
                                    BorderBrush="{DynamicResource DefaultBorderBrush}"
                                    BorderThickness="1">
                                    <Grid
                                        x:Name="ItemPresenterBoder"
                                        Background="{DynamicResource DefaultBackgroundBrush}">
                                        <ItemsPresenter />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_DisplayedTextBox" Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="WatermarkTextBlock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource EditingBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>