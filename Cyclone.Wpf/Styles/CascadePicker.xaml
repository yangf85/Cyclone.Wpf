<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Resources/CommonResources.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="ctl:CascadePickerItem">
        <Setter Property="Height" Value="{DynamicResource HorizontalControlHeight}" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctl:CascadePickerItem">
                    <Border x:Name="RootBorder">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="*"
                                    SharedSizeGroup="Header" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                Grid.IsSharedSizeScope="True" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"
                                Width="12"
                                Height="12"
                                Margin="5,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="M761.6 489.6l-432-435.2c-9.6-9.6-25.6-9.6-35.2 0-9.6 9.6-9.6 25.6 0 35.2l416 416-416 425.6c-9.6 9.6-9.6 25.6 0 35.2s25.6 9.6 35.2 0l432-441.6C771.2 515.2 771.2 499.2 761.6 489.6z"
                                Fill="{DynamicResource DefaultForegroundBrush}"
                                Stretch="Uniform" />
                            <Popup
                                x:Name="ItemsContainer"
                                AllowsTransparency="True"
                                Placement="Right"
                                PlacementTarget="{Binding ElementName=RootBoder}"
                                VerticalOffset="-1">
                                <Grid Margin="5">
                                    <Border
                                        x:Name="ItemPresenterBoder"
                                        Width="200"
                                        Background="{DynamicResource DefaultBackgroundBrush}"
                                        BorderThickness="1">
                                        <ItemsPresenter />
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemsContainer" Property="IsOpen" Value="True" />
                        </Trigger>
                        <Trigger SourceName="RootBorder" Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctl:CascadePicker">
        <Setter Property="Height" Value="{DynamicResource HorizontalControlHeight}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctl:CascadePicker">
                    <Border
                        x:Name="RootBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="WatermarkTextBlock"
                                Grid.Column="0"
                                Text="{TemplateBinding Watermark}"
                                Visibility="{Binding Path=DisplayedNodePath, Mode=TwoWay, Converter={x:Static conv:VisibilityConverter.VisibleWhenNullOrWhiteSpace}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <TextBox
                                x:Name="PART_DisplayedTextBox"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Panel.ZIndex="99"
                                Background="Transparent"
                                IsReadOnly="True"
                                Text="{Binding Path=DisplayedNodePath, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=ctl:CascadePicker, Mode=FindAncestor}}" />
                            <!--<ToggleButton
                                Grid.Column="1"
                                Width="30"
                                IsChecked="{Binding Path=IsOpened, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />-->
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding Path=IsOpened, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ctl:CascadePicker}}"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=RootBorder}"
                                PopupAnimation="Slide"
                                StaysOpen="True"
                                VerticalOffset="1">
                                <Grid Margin="5">
                                    <Border
                                        x:Name="ItemPresenterBoder"
                                        Width="200"
                                        Background="{DynamicResource DefaultBackgroundBrush}"
                                        BorderThickness="1">
                                        <ItemsPresenter />
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_DisplayedTextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="WatermarkTextBlock" Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsOpened" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
