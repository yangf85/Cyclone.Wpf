<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf.Themes;component/Resources/BasicTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <ControlTemplate x:Key="MultiComboBox.TextBox" TargetType="TextBox">
        <Border
            x:Name="PART_ContentHost"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <Style x:Key="MultiComboBox.OpenButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=ctl:MultiComboBox}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <Path
                            x:Name="Indicator"
                            Width="15"
                            Height="15"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M533.333333 631.466667L866.133333 298.666667l29.866667 29.866666-362.666667 362.666667L170.666667 328.533333l29.866666-29.866666 332.8 332.8z"
                            Fill="{DynamicResource Icon.Foreground.Default}"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Icon.Foreground.Hover}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Indicator" Property="Data" Value="M533.333333 358.4l-332.8 332.8-29.866666-29.866667L533.333333 298.666667l362.666667 362.666666-29.866667 29.866667-332.8-332.8z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  MultiComboBoxItem Style  -->
    <Style TargetType="{x:Type ctl:MultiComboBoxItem}">
        <Setter Property="Height" Value="{DynamicResource Height.Horizontal.Item}" />
        <Setter Property="Padding" Value="{DynamicResource Padding.Horizontal}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Default}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:MultiComboBoxItem}">
                    <Grid>
                        <Border
                            x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource CornerRadius.Small}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <CheckBox
                                    x:Name="PART_CheckBox"
                                    Grid.Column="0"
                                    Margin="2,0,0,0"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    IsHitTestVisible="False" />

                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{DynamicResource Background.Hover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  MultiComboBox Style  -->
    <Style TargetType="{x:Type ctl:MultiComboBox}">
        <Setter Property="Background" Value="{DynamicResource Background.Default}" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Default}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness.Thin}" />
        <Setter Property="Height" Value="{DynamicResource Height.Horizontal.Control}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:MultiComboBox}">
                    <Border
                        x:Name="RootBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <TextBox
                                    x:Name="PART_DisplayedTextBox"
                                    Height="Auto"
                                    Margin="5,0,0,0"
                                    Padding="3"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsReadOnly="True"
                                    Template="{StaticResource MultiComboBox.TextBox}" />
                                <TextBlock
                                    x:Name="PART_Watermark"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{DynamicResource Text.Prompt}"
                                    IsHitTestVisible="False"
                                    Text="{TemplateBinding Watermark}"
                                    Visibility="Visible" />
                            </Grid>
                            <ToggleButton
                                x:Name="PART_ToggleButton"
                                Grid.Column="1"
                                Margin="0,0,5,0"
                                Focusable="False"
                                IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource MultiComboBox.OpenButtonStyle}" />
                            <Popup
                                x:Name="PART_ItemsContainer"
                                AllowsTransparency="True"
                                IsOpen="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=RootBorder}"
                                PopupAnimation="Slide"
                                StaysOpen="False"
                                VerticalOffset="1">
                                <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxContainerHeight}">
                                    <Border
                                        x:Name="ContainerBorder"
                                        Background="{DynamicResource Background.Container}"
                                        BorderBrush="{DynamicResource Border.Default}"
                                        BorderThickness="1">
                                        <ScrollViewer
                                            MaxHeight="{TemplateBinding MaxContainerHeight}"
                                            HorizontalScrollBarVisibility="Disabled"
                                            VerticalScrollBarVisibility="Auto">
                                            <StackPanel>
                                                <!--  全选项  -->
                                                <CheckBox
                                                    x:Name="PART_SelectAllCheckBox"
                                                    Margin="2,0,0,0"
                                                    VerticalAlignment="Center"
                                                    Content="{Binding SelectAllText, RelativeSource={RelativeSource TemplatedParent}}"
                                                    FontWeight="Bold"
                                                    Visibility="{Binding ShowSelectAll, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static conv:BooleanConverter.ToVisibility}}" />

                                                <!--  分隔线  -->
                                                <Rectangle
                                                    Height="1"
                                                    Margin="2,0"
                                                    Fill="{Binding ElementName=ContainerBorder, Path=BorderBrush}"
                                                    Visibility="{Binding ShowSelectAll, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static conv:BooleanConverter.ToVisibility}}" />

                                                <!--  项目列表  -->
                                                <ItemsPresenter x:Name="PART_ItemsPresenter" />
                                            </StackPanel>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource Border.Hover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource Border.Focused}" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource Border.Active}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>