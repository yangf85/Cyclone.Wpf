<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Themes/BasicTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="NotificationWindow.CloseButton.Style" TargetType="Button">
        <Setter Property="Padding" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Panel.ZIndex" Value="99" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="RootGrid" Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource Background.Close}" />
                            <Setter Property="Foreground" Value="{DynamicResource Icon.Foreground.Invert}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RootGrid" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="Notification.Information.DataTemplate">
        <Grid Background="{DynamicResource Background.Info}">
            <Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Path
                    Grid.Column="0"
                    Width="24"
                    Height="24"
                    VerticalAlignment="Center"
                    Data="M533.333333 85.333333c-247.426667 0-448 200.573333-448 448s200.573333 448 448 448 448-200.573333 448-448-200.573333-448-448-448z m0 256a21.333333 21.333333 0 1 1 21.333334-21.333333 21.333333 21.333333 0 0 1-21.333334 21.333333z m0 426.666667h-21.333333a21.333333 21.333333 0 0 1-21.28-22.853333l19.706667-275.873334A21.333333 21.333333 0 0 1 512 426.666667h21.333333a21.333333 21.333333 0 0 1 21.28 22.853333l-19.706666 275.873333A21.333333 21.333333 0 0 1 533.333333 768z"
                    Fill="{DynamicResource Icon.Foreground.Invert}"
                    Stretch="Uniform" />
                <TextBlock
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource Foreground.Invert}"
                    Text="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=ctl:NotificationWindow}}"
                    TextWrapping="WrapWithOverflow" />
            </Grid>
        </Grid>
    </DataTemplate>

    <Style TargetType="{x:Type ctl:NotificationWindow}">
        <Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    GlassFrameThickness="-1"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="0"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:NotificationWindow}">
                    <Border
                        x:Name="RootBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Label
                                x:Name="TitleLabel"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Content="{TemplateBinding Title}"
                                FontWeight="Bold" />
                            <Button
                                Command="{x:Static ctl:NotificationWindow.CloseWindowCommand}"
                                Style="{StaticResource NotificationWindow.CloseButton.Style}"
                                Visibility="{Binding Path=IsShowCloseButton, Converter={x:Static conv:VisibilityConverter.VisibleWhenTrue}, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                WindowChrome.IsHitTestVisibleInChrome="True">
                                <Path
                                    Width="16"
                                    Height="16"
                                    Margin="1"
                                    Data="M 0,0 L 8,8 M 8,0 L 0,8"
                                    Stretch="Uniform"
                                    Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                    StrokeThickness="1" />
                            </Button>

                            <ContentPresenter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>