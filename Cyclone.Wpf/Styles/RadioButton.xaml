<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
                    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Themes/BasicTheme.xaml" />-->
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Styles/Control.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="RadioButton.ControlTemplate.Basic"
                     TargetType="RadioButton">
        <StackPanel Margin="{TemplateBinding Padding}"
                    Background="Transparent"
                    Orientation="Horizontal"
                    SnapsToDevicePixels="True">
            <Grid>
                <Ellipse x:Name="OuterEllipse"
                         Width="18"
                         Height="18"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Stroke="{DynamicResource Border.Default}"
                         StrokeThickness="1" />
                <Ellipse x:Name="InnerEllipse"
                         Width="15"
                         Height="15"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Fill="{DynamicResource Icon.Foreground.Checked}"
                         Visibility="{Binding Path=IsChecked, Converter={x:Static conv:VisibilityConverter.VisibleWhenTrue}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </Grid>
            <Grid Name="ContentGrid"
                  Margin="5,0,0,0"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <ContentPresenter x:Name="PART_Content"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Content}" />
            </Grid>
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger SourceName="OuterEllipse" Property="IsMouseOver" Value="True">
                <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource Background.Hover}" />
            </Trigger>
            <Trigger SourceName="InnerEllipse" Property="IsMouseOver" Value="True">
                <Setter TargetName="InnerEllipse" Property="Fill" Value="{DynamicResource Icon.Foreground.Hover}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="InnerEllipse"
                                             Storyboard.TargetProperty="Width"
                                             From="0"
                                             To="10"
                                             Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetName="InnerEllipse"
                                             Storyboard.TargetProperty="Height"
                                             From="0"
                                             To="10"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RadioButton.Style.Basic"
           BasedOn="{StaticResource Control.Style.Basic}"
           TargetType="RadioButton">
        <Setter Property="Template" Value="{StaticResource RadioButton.ControlTemplate.Basic}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    <Style BasedOn="{StaticResource RadioButton.Style.Basic}"
           TargetType="RadioButton" />
</ResourceDictionary>