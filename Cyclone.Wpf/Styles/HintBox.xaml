<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Cyclone.Wpf.Converters"
    xmlns:ctl="clr-namespace:Cyclone.Wpf.Controls"
    xmlns:hp="clr-namespace:Cyclone.Wpf.Helpers">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf.Themes;component/Resources/BasicTheme.xaml" />-->
        <ResourceDictionary Source="pack://application:,,,/Cyclone.Wpf;component/Styles/Control.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate
        x:Key="HintBoxItem.ControlTemplate.Basic"
        TargetType="ctl:HintBoxItem">
        <Border
            x:Name="RootBorder"
            Height="{TemplateBinding Height}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True">
            <ContentPresenter
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource Background.Highlighted}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Background.Hover}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="HintBoxItem.Style.Basic"
        TargetType="ctl:HintBoxItem">
        <Setter Property="Template" Value="{StaticResource HintBoxItem.ControlTemplate.Basic}" />
        <Setter Property="Height" Value="{DynamicResource Height.Horizontal.Control}" />
        <Setter Property="Background" Value="{DynamicResource Background.Container}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style
        x:Key="HintBox.ButtonStyle"
        TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="HintBox.InputTextBoxStyle"
        TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Default}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1,0" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate
        x:Key="HintBox.ControlTemplate.Basic"
        TargetType="ctl:HintBox">
        <Border
            Name="RootBorder"
            Grid.Column="0"
            Margin="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid
                    x:Name="PresenterGrid"
                    Grid.Column="0">
                    <Popup
                        x:Name="PART_DisplayPopup"
                        ctl:PopupBox.IsPositionUpdate="True"
                        AllowsTransparency="true"
                        IsOpen="{TemplateBinding IsOpen}"
                        Placement="Bottom"
                        PlacementTarget="{Binding ElementName=RootBorder}"
                        PopupAnimation="Slide"
                        StaysOpen="True"
                        VerticalOffset="2">
                        <Border
                            x:Name="ExpansionBorder"
                            Width="{Binding ElementName=RootBorder, Path=ActualWidth}"
                            MinHeight="{Binding ActualHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Background="{DynamicResource Background.Container}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer
                                x:Name="PART_ContainerScrollViewer"
                                MaxHeight="{TemplateBinding MaxContainerHeight}"
                                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                    <TextBox
                        x:Name="PART_InputTextBox"
                        Width="{Binding ActualWidth, ElementName=PresenterGrid}"
                        Background="Transparent"
                        Style="{StaticResource HintBox.InputTextBoxStyle}"
                        Text="{Binding Path=InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="ExpansionBorder" Property="Height" Value="{DynamicResource Height.Horizontal.Item}" />
            </Trigger>
            <Trigger SourceName="PART_InputTextBox" Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="PART_DisplayPopup" Property="IsOpen" Value="True" />
                <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource Border.Editing}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="HintBox.Style.Basic"
        BasedOn="{StaticResource Control.Style.Basic}"
        TargetType="ctl:HintBox">
        <Setter Property="Template" Value="{StaticResource HintBox.ControlTemplate.Basic}" />
        <Setter Property="Height" Value="{DynamicResource Height.Horizontal.Control}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Default}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border.Default}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness.Thin}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource HintBoxItem.Style.Basic}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style
        BasedOn="{StaticResource HintBox.Style.Basic}"
        TargetType="ctl:HintBox" />
</ResourceDictionary>